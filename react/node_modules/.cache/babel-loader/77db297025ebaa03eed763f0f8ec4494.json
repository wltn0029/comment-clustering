{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jisu/comment-clustering/react/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\n\nconst getCommentThreads = videoId => `https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&key=${apiKey}\\\n                                        &videoId=${videoId}&maxResults=100`;\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateVideoInfo = async videoId => {\n      if (!videoId) {\n        return;\n      }\n\n      const videoInfo = await axios.get(getVideoInfo(videoId));\n      const videoInfoData = videoInfo.data.items[0].snippet;\n      const channelId = videoInfoData.channelId;\n      const videoTitle = videoInfoData.title;\n      const description = videoInfoData.description;\n      const videoThumbnail = videoInfoData.thumbnails.default.url;\n      const channelInfo = await axios.get(getChannelInfo(channelId));\n      const channelImg = channelInfo.data.items[0].snippet.thumbnails.default.url;\n      this.setState({\n        videoTitle,\n        videoThumbnail,\n        description,\n        channelImg\n      });\n    };\n\n    this.state = {\n      neg: [],\n      pos: [],\n      neu: []\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.videoId !== this.props.videoId) {\n      this.analyzeComments(nextProps.videoId);\n      return true;\n    } else if (nextState.neg !== this.state.neg || nextState.pos !== this.state.pos || nextState.neu !== this.state.neu) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      videoTitle,\n      videoThumbnail,\n      description,\n      channelImg\n    } = this.state;\n    console.log('render');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-info\",\n      children: [videoThumbnail && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: videoThumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }, this), videoTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: videoTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }, this), description && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 34\n      }, this), channelImg && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: channelImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/jisu/comment-clustering/react/src/components/Comments.js"],"names":["React","Component","axios","apiKey","getCommentThreads","videoId","Comments","constructor","props","updateVideoInfo","videoInfo","get","getVideoInfo","videoInfoData","data","items","snippet","channelId","videoTitle","title","description","videoThumbnail","thumbnails","default","url","channelInfo","getChannelInfo","channelImg","setState","state","neg","pos","neu","shouldComponentUpdate","nextProps","nextState","analyzeComments","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\nconst getCommentThreads = videoId => `https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&key=${apiKey}\\\n                                        &videoId=${videoId}&maxResults=100`\nclass Comments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            neg: [],\n            pos : [],\n            neu : []\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.videoId !== this.props.videoId) {\n            this.analyzeComments(nextProps.videoId);\n            return true;\n        } else if (nextState.neg !== this.state.neg ||\n                    nextState.pos !== this.state.pos ||\n                    nextState.neu !== this.state.neu) {\n            return true\n        }\n        return false;\n    }\n\n    updateVideoInfo = async(videoId) => {\n        if (!videoId) {\n            return;\n        }\n        const videoInfo = await axios.get(getVideoInfo(videoId));\n        const videoInfoData = videoInfo.data.items[0].snippet;\n        const channelId = videoInfoData.channelId;\n        const videoTitle = videoInfoData.title;\n        const description = videoInfoData.description;\n        const videoThumbnail = videoInfoData.thumbnails.default.url;\n\n        const channelInfo = await axios.get(getChannelInfo(channelId));\n        const channelImg = channelInfo.data.items[0].snippet.thumbnails.default.url;\n        \n        this.setState({videoTitle, videoThumbnail, description, channelImg});\n    }\n\n    render() {\n        const {videoTitle, videoThumbnail, description, channelImg} = this.state;\n        console.log('render')\n        return (\n            <div  className=\"video-info\">\n                {videoThumbnail && (<img src={videoThumbnail}/>)}\n                {videoTitle && (<div>{videoTitle}</div>)}\n                {description && (<div>{description}</div>)}\n                {channelImg && (<img src={channelImg}/>)}\n            </div>\n           \n        );\n    }\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}