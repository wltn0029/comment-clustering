{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jisu/comment-clustering/react/src/components/VideoInfo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\n\nconst getVideoDescription = videoId => `https://www.googleapis.com/youtube/v3/videos?part=snippet&key=${apiKey}\\\n                              &videoId=${videoId}`;\n\nconst getChannelImgUrl = channelId => `https://www.googleapis.com/youtube/v3/channels?part=snippet&key=${apiKey}\\\n                              &id=${channelId}`;\n\nclass VideoInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getVideoInfo = async () => {\n      const videoInfo = await getVideoInfo(videoId);\n      const channelId = videoInfo.items.snippet.channelId;\n      const videoTitle = videoInfo.items.snippet.title;\n      const description = videoInfo.items.snippet.description;\n      const videoThumbnail = videoInfo.items.snippet.thumbnails.default.url;\n      const channelInfo = await getChannelImgUrl(channelId);\n      const channelImg = channelInfo.snippet.thumbnails.default.url;\n      this.setState({\n        videoInfo: {\n          videoTitle,\n          videoThumbnail,\n          description,\n          channelImg\n        }\n      });\n    };\n\n    this.state = {\n      videoTitle: '',\n      description: '',\n      videoThumbnail: '',\n      channelImg: ''\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.videoId !== this.props.videoId) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return this.props.videoId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default VideoInfo;","map":{"version":3,"sources":["/Users/jisu/comment-clustering/react/src/components/VideoInfo.js"],"names":["React","Component","axios","apiKey","getVideoDescription","videoId","getChannelImgUrl","channelId","VideoInfo","constructor","props","getVideoInfo","videoInfo","items","snippet","videoTitle","title","description","videoThumbnail","thumbnails","default","url","channelInfo","channelImg","setState","state","shouldComponentUpdate","nextProps","nextState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,yCAAf;;AACA,MAAMC,mBAAmB,GAAGC,OAAO,IAAK,iEAAgEF,MAAO;AAC/G,yCAAyCE,OAAQ,EADjD;;AAEA,MAAMC,gBAAgB,GAAGC,SAAS,IAAK,mEAAkEJ,MAAO;AAChH,oCAAoCI,SAAU,EAD9C;;AAGA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC9BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,YAlBmB,GAkBJ,YAAW;AACtB,YAAMC,SAAS,GAAG,MAAMD,YAAY,CAACN,OAAD,CAApC;AAEA,YAAME,SAAS,GAAGK,SAAS,CAACC,KAAV,CAAgBC,OAAhB,CAAwBP,SAA1C;AACA,YAAMQ,UAAU,GAAGH,SAAS,CAACC,KAAV,CAAgBC,OAAhB,CAAwBE,KAA3C;AACA,YAAMC,WAAW,GAAGL,SAAS,CAACC,KAAV,CAAgBC,OAAhB,CAAwBG,WAA5C;AACA,YAAMC,cAAc,GAAGN,SAAS,CAACC,KAAV,CAAgBC,OAAhB,CAAwBK,UAAxB,CAAmCC,OAAnC,CAA2CC,GAAlE;AAEA,YAAMC,WAAW,GAAG,MAAMhB,gBAAgB,CAACC,SAAD,CAA1C;AACA,YAAMgB,UAAU,GAAGD,WAAW,CAACR,OAAZ,CAAoBK,UAApB,CAA+BC,OAA/B,CAAuCC,GAA1D;AAEA,WAAKG,QAAL,CAAc;AAAEZ,QAAAA,SAAS,EAAG;AAACG,UAAAA,UAAD;AAAaG,UAAAA,cAAb;AAA6BD,UAAAA,WAA7B;AAA0CM,UAAAA;AAA1C;AAAd,OAAd;AACH,KA9BkB;;AAEf,SAAKE,KAAL,GAAa;AACTV,MAAAA,UAAU,EAAG,EADJ;AAETE,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,cAAc,EAAE,EAHP;AAITK,MAAAA,UAAU,EAAG;AAJJ,KAAb;AAMH;;AAEDG,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAID,SAAS,CAACtB,OAAV,KAAsB,KAAKK,KAAL,CAAWL,OAArC,EAA8C;AAE1C,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAgBDwB,EAAAA,MAAM,GAAG;AACL,WACI,KAAKnB,KAAL,CAAWL,OAAX,iBACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFR;AAMH;;AAxC6B;;AA2ClC,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\nconst getVideoDescription = videoId => `https://www.googleapis.com/youtube/v3/videos?part=snippet&key=${apiKey}\\\n                              &videoId=${videoId}`\nconst getChannelImgUrl = channelId => `https://www.googleapis.com/youtube/v3/channels?part=snippet&key=${apiKey}\\\n                              &id=${channelId}`\n\nclass VideoInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoTitle : '',\n            description: '',\n            videoThumbnail: '',\n            channelImg : ''\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.videoId !== this.props.videoId) {\n\n            return true;\n        }\n        return false;\n    }\n\n    getVideoInfo = async() => {\n        const videoInfo = await getVideoInfo(videoId);\n\n        const channelId = videoInfo.items.snippet.channelId;\n        const videoTitle = videoInfo.items.snippet.title;\n        const description = videoInfo.items.snippet.description;\n        const videoThumbnail = videoInfo.items.snippet.thumbnails.default.url;\n\n        const channelInfo = await getChannelImgUrl(channelId);\n        const channelImg = channelInfo.snippet.thumbnails.default.url;\n        \n        this.setState({ videoInfo : {videoTitle, videoThumbnail, description, channelImg}});\n    }\n\n    render() {\n        return (\n            this.props.videoId && (\n                <div className=\"video-info\">\n                \n                </div>)\n        );\n    }\n}\n\nexport default VideoInfo;"]},"metadata":{},"sourceType":"module"}