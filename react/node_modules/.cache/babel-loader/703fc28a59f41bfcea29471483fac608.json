{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jisu/comment-clustering/react/src/components/UrlForm.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\n\nconst getVideoPageInfo = videoId => `https://www.googleapis.com/youtube/v3/videos\\\n                                      ?part=id&id=${videoId}&key=${apiKey}`; // ref : https://stackoverflow.com/questions/3452546/how-do-i-get-the-youtube-video-id-from-a-url\n\n\nconst getVideoId = videoUrl => {\n  let regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n  let match = videoUrl.match(regExp);\n\n  if (match && match[2].length === 11) {\n    return match[2];\n  } else {\n    return undefined;\n  }\n};\n\nclass UrlForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      console.log(this.inputRef.current.value);\n\n      if (!this.inputRef.current) {\n        return;\n      } else if (this.inputRef.current.value.length === 0) {\n        this.setState({\n          correctInput: undefined\n        });\n      }\n\n      const videoId = getVideoId(this.inputRef.current.value);\n\n      if (!videoId) {\n        this.setState({\n          correctInput: false\n        });\n      }\n\n      const checkUrlValid = async () => {\n        const videoPageInfo = await axios.get(getVideoPageInfo(videoId));\n        console.log(videoPageInfo);\n      };\n\n      checkUrlValid();\n      this.props.handleClick(videoId);\n      this.setState({\n        correctInput: true\n      });\n    };\n\n    this.inputRef = /*#__PURE__*/React.createRef(); // correctInput\n    // undefined : no link\n    // true : right link\n    // false : wrong link\n\n    this.state = {\n      correctInput: undefined\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    const checkInputIconClass = this.state.correctInput ? 'right-input' : this.state.correctInput === false ? 'wrong-input' : 'no-input';\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"url-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick,\n          children: \"rearrange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"write youtube url\",\n          ref: this.inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: checkInputIconClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), this.state.correctInput === false && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Please insert correct url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UrlForm;","map":{"version":3,"sources":["/Users/jisu/comment-clustering/react/src/components/UrlForm.js"],"names":["axios","React","Component","apiKey","getVideoPageInfo","videoId","getVideoId","videoUrl","regExp","match","length","undefined","UrlForm","constructor","props","handleClick","e","console","log","inputRef","current","value","setState","correctInput","checkUrlValid","videoPageInfo","get","createRef","state","bind","render","checkInputIconClass"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\n\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\nconst getVideoPageInfo = (videoId) => `https://www.googleapis.com/youtube/v3/videos\\\n                                      ?part=id&id=${videoId}&key=${apiKey}`\n\n// ref : https://stackoverflow.com/questions/3452546/how-do-i-get-the-youtube-video-id-from-a-url\nconst getVideoId = videoUrl => {\n  let regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n  let match = videoUrl.match(regExp);\n  if (match && match[2].length === 11) {\n    return match[2];\n  } else {\n    return undefined;\n  }\n}\nclass UrlForm extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    // correctInput\n    // undefined : no link\n    // true : right link\n    // false : wrong link\n    this.state = {\n      correctInput : undefined\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick = (e) => {\n    console.log(this.inputRef.current.value);\n    if (!this.inputRef.current) {\n      return;\n    } else if (this.inputRef.current.value.length === 0) {\n      this.setState({\n        correctInput: undefined\n      })\n    }\n    const videoId = getVideoId(this.inputRef.current.value);\n    if (!videoId ) {\n      this.setState({\n        correctInput: false\n      })\n    } \n    const checkUrlValid = async () => {\n      const videoPageInfo = await axios.get(getVideoPageInfo(videoId));\n      console.log(videoPageInfo);\n    }\n    checkUrlValid();\n    this.props.handleClick(videoId);\n    this.setState({\n      correctInput: true\n    })\n  }\n\n  render() {\n    const checkInputIconClass = this.state.correctInput ? \n                                  'right-input' : \n                                  this.state.correctInput === false ?\n                                  'wrong-input' :\n                                  'no-input'\n    return (\n      <React.Fragment>\n        <div className=\"url-form\">\n          <button onClick={this.handleClick}>rearrange</button>\n          <input\n            placeholder=\"write youtube url\"\n            ref={this.inputRef}\n          />\n          <div className={checkInputIconClass}></div>\n        </div>\n        {this.state.correctInput === false && (\n          <span>\n            Please insert correct url\n          </span>\n        )}\n      </React.Fragment>\n      \n    );\n  }\n}\n\nexport default UrlForm;"]},"metadata":{},"sourceType":"module"}