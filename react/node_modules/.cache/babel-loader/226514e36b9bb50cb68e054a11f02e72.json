{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jisu/comment-clustering/react/src/components/CommentThread.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './CommentThread.css';\n\nclass CommentThread extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      const {\n        expand,\n        category\n      } = this.props;\n\n      if (expand) {\n        this.props.handleClick('');\n      } else {\n        this.props.handleClick(category);\n      }\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    // expand (true, false, undefined)\n    // true: expand\n    // false : show top comment\n    // undefined : nothing to show\n    const {\n      expand,\n      comments\n    } = this.props;\n    const commentThread = expand ? comments : comments.slice(0, 1);\n    const isShowMore = expand ? 'Close' : 'Show More';\n    const categoryName = this.props.category === \"pos\" ? \"POSITIVE\" : this.props.category === \"neu\" ? \"NEUTRALITY\" : \"NEGATIVE\";\n    return expand !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"category-name\",\n          children: categoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"thread-btn\",\n          onClick: this.handleClick,\n          children: isShowMore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: commentThread.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          authorDisplayName: comment.authorDisplayName,\n          authorProfileImageUrl: comment.authorProfileImageUrl,\n          textOriginal: comment.textOriginal\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass Comment extends Component {\n  render() {\n    const {\n      authorDisplayName,\n      authorProfileImageUrl,\n      textOriginal\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: authorDisplayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \" : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-text\",\n          children: textOriginal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CommentThread;","map":{"version":3,"sources":["/Users/jisu/comment-clustering/react/src/components/CommentThread.js"],"names":["React","Component","classNames","CommentThread","constructor","props","handleClick","e","expand","category","bind","render","comments","commentThread","slice","isShowMore","categoryName","undefined","map","comment","authorDisplayName","authorProfileImageUrl","textOriginal","id","Comment"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,WALmB,GAKJC,CAAD,IAAO;AACjB,YAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,UAAqB,KAAKJ,KAAhC;;AACA,UAAIG,MAAJ,EAAY;AACR,aAAKH,KAAL,CAAWC,WAAX,CAAuB,EAAvB;AACH,OAFD,MAEO;AACH,aAAKD,KAAL,CAAWC,WAAX,CAAuBG,QAAvB;AACH;AACJ,KAZkB;;AAEf,SAAKH,WAAL,GAAmB,KAAKA,WAAL,CAAiBI,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAWDC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA,UAAM;AAACH,MAAAA,MAAD;AAASI,MAAAA;AAAT,QAAqB,KAAKP,KAAhC;AACA,UAAMQ,aAAa,GAAGL,MAAM,GAAEI,QAAF,GAAaA,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAiB,CAAjB,CAAzC;AACA,UAAMC,UAAU,GAAGP,MAAM,GAAE,OAAF,GAAY,WAArC;AACA,UAAMQ,YAAY,GAAG,KAAKX,KAAL,CAAWI,QAAX,KAAwB,KAAxB,GAAgC,UAAhC,GAA6C,KAAKJ,KAAL,CAAWI,QAAX,KAAwB,KAAxB,GAAgC,YAAhC,GAA+C,UAAjH;AAEA,WACID,MAAM,KAAKS,SAAX,iBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,oBAAiCD;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,KAAKV,WAA7C;AAAA,oBAA2DS;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,kBACCF,aAAa,CAACK,GAAd,CAAkBC,OAAO,iBACtB,QAAC,OAAD;AAEI,UAAA,iBAAiB,EAAEA,OAAO,CAACC,iBAF/B;AAGI,UAAA,qBAAqB,EAAED,OAAO,CAACE,qBAHnC;AAII,UAAA,YAAY,EAAEF,OAAO,CAACG;AAJ1B,WACSH,OAAO,CAACI,EADjB;AAAA;AAAA;AAAA;AAAA,gBADH;AADD;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAmBH;;AA5CiC;;AA+CtC,MAAMC,OAAN,SAAsBvB,SAAtB,CAAgC;AAC5BU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACS,MAAAA,iBAAD;AAAoBC,MAAAA,qBAApB;AAA2CC,MAAAA;AAA3C,QAA2D,KAAKjB,KAAtE;AACA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCAEI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,oBAA6Be;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,oBAAgCE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAb2B;;AAgBhC,eAAenB,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './CommentThread.css';\n\nclass CommentThread extends Component { \n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick = (e) => {\n        const {expand, category} = this.props;\n        if (expand) {\n            this.props.handleClick('');\n        } else {\n            this.props.handleClick(category);\n        }\n    }\n\n    render() {\n        // expand (true, false, undefined)\n        // true: expand\n        // false : show top comment\n        // undefined : nothing to show\n        const {expand, comments} = this.props;\n        const commentThread = expand? comments : comments.slice(0,1);\n        const isShowMore = expand? 'Close' : 'Show More';\n        const categoryName = this.props.category === \"pos\" ? \"POSITIVE\" : this.props.category === \"neu\" ? \"NEUTRALITY\" : \"NEGATIVE\"\n\n        return (\n            expand !== undefined && (\n                <div>\n                    <div className=\"category\">\n                        <text className=\"category-name\">{categoryName}</text>\n                        <button className='thread-btn' onClick={this.handleClick}>{isShowMore}</button>\n                    </div>\n                    <div>\n                    {commentThread.map(comment => (\n                        <Comment \n                            key={comment.id}\n                            authorDisplayName={comment.authorDisplayName}\n                            authorProfileImageUrl={comment.authorProfileImageUrl}\n                            textOriginal={comment.textOriginal}/>\n                    ))}\n                    </div>\n                </div>\n            )\n        );\n    }\n}\n\nclass Comment extends Component {\n    render() {\n        const {authorDisplayName, authorProfileImageUrl, textOriginal} = this.props;\n        return(\n            <React.Fragment>\n                <div className=\"profile\">\n                    {/* <img className='profile-image' src={authorProfileImageUrl}/> */}\n                    <span className='user-name'>{authorDisplayName}</span>\n                    <text> : </text>\n                    <span className='comment-text'>{textOriginal}</span>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CommentThread;"]},"metadata":{},"sourceType":"module"}