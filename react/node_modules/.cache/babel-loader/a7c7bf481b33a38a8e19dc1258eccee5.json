{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jisu/comment-clustering/react/src/components/VideoInfo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\n\nconst getVideoInfo = videoId => `https://www.googleapis.com/youtube/v3/videos?part=snippet&key=${apiKey}\\\n                              &id=${videoId}`;\n\nconst getChannelInfo = channelId => `https://www.googleapis.com/youtube/v3/channels?part=snippet&key=${apiKey}\\\n                              &id=${channelId}`;\n\nclass VideoInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateVideoInfo = async videoId => {\n      console.log('updatevideoindo');\n\n      if (!videoId) {\n        return;\n      }\n\n      const videoInfo = await axios.get(getVideoInfo(videoId));\n      console.log('videoIndo', videoInfo);\n      const videoInfoData = videoInfo.data.items[0].snippet;\n      const channelId = videoInfoData.channelId;\n      const videoTitle = videoInfoData.title;\n      const description = videoInfoData.description;\n      const videoThumbnail = videoInfoData.thumbnails.default.url;\n      const channelInfo = await axios.get(getChannelInfo(channelId));\n      console.log('channel info', channelInfo);\n      const channelImg = channelInfo.snippet.thumbnails.default.url;\n      this.setState({\n        videoTitle,\n        videoThumbnail,\n        description,\n        channelImg\n      });\n    };\n\n    this.state = {\n      videoTitle: '',\n      description: '',\n      videoThumbnail: '',\n      channelImg: ''\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.videoId !== this.props.videoId) {\n      console.log(`videoInfo update ${nextProps.videoId} ${this.props.videoId}`);\n      this.updateVideoInfo(nextProps.videoId);\n      return true;\n    } else if (nextState.videoTitle !== this.state.videoTitle || nextState.videoThumbnail !== this.state.videoThumbnail || nextState.description !== this.state.default || nextState.channelImg !== this.state.channelImg) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      videoTitle,\n      videoThumbnail,\n      description,\n      channelImg\n    } = this.state;\n    console.log('render');\n    return this.state.videoTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: videoTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default VideoInfo;","map":{"version":3,"sources":["/Users/jisu/comment-clustering/react/src/components/VideoInfo.js"],"names":["React","Component","axios","apiKey","getVideoInfo","videoId","getChannelInfo","channelId","VideoInfo","constructor","props","updateVideoInfo","console","log","videoInfo","get","videoInfoData","data","items","snippet","videoTitle","title","description","videoThumbnail","thumbnails","default","url","channelInfo","channelImg","setState","state","shouldComponentUpdate","nextProps","nextState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,yCAAf;;AACA,MAAMC,YAAY,GAAGC,OAAO,IAAK,iEAAgEF,MAAO;AACxG,oCAAoCE,OAAQ,EAD5C;;AAEA,MAAMC,cAAc,GAAGC,SAAS,IAAK,mEAAkEJ,MAAO;AAC9G,oCAAoCI,SAAU,EAD9C;;AAGA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC9BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,eAxBmB,GAwBD,MAAMN,OAAN,IAAkB;AAChCO,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,UAAI,CAACR,OAAL,EAAc;AACV;AACH;;AACD,YAAMS,SAAS,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUX,YAAY,CAACC,OAAD,CAAtB,CAAxB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,SAAzB;AACA,YAAME,aAAa,GAAGF,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,OAA9C;AACA,YAAMZ,SAAS,GAAGS,aAAa,CAACT,SAAhC;AACA,YAAMa,UAAU,GAAGJ,aAAa,CAACK,KAAjC;AACA,YAAMC,WAAW,GAAGN,aAAa,CAACM,WAAlC;AACA,YAAMC,cAAc,GAAGP,aAAa,CAACQ,UAAd,CAAyBC,OAAzB,CAAiCC,GAAxD;AAEA,YAAMC,WAAW,GAAG,MAAMzB,KAAK,CAACa,GAAN,CAAUT,cAAc,CAACC,SAAD,CAAxB,CAA1B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bc,WAA5B;AACA,YAAMC,UAAU,GAAGD,WAAW,CAACR,OAAZ,CAAoBK,UAApB,CAA+BC,OAA/B,CAAuCC,GAA1D;AAEA,WAAKG,QAAL,CAAc;AAACT,QAAAA,UAAD;AAAaG,QAAAA,cAAb;AAA6BD,QAAAA,WAA7B;AAA0CM,QAAAA;AAA1C,OAAd;AACH,KA1CkB;;AAEf,SAAKE,KAAL,GAAa;AACTV,MAAAA,UAAU,EAAG,EADJ;AAETE,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,cAAc,EAAE,EAHP;AAITK,MAAAA,UAAU,EAAG;AAJJ,KAAb;AAMH;;AAEDG,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAID,SAAS,CAAC3B,OAAV,KAAsB,KAAKK,KAAL,CAAWL,OAArC,EAA8C;AAC1CO,MAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBmB,SAAS,CAAC3B,OAAQ,IAAG,KAAKK,KAAL,CAAWL,OAAQ,EAAxE;AACA,WAAKM,eAAL,CAAqBqB,SAAS,CAAC3B,OAA/B;AACA,aAAO,IAAP;AACH,KAJD,MAIO,IAAI4B,SAAS,CAACb,UAAV,KAAyB,KAAKU,KAAL,CAAWV,UAApC,IACCa,SAAS,CAACV,cAAV,KAA6B,KAAKO,KAAL,CAAWP,cADzC,IAECU,SAAS,CAACX,WAAV,KAA0B,KAAKQ,KAAL,CAAWL,OAFtC,IAGCQ,SAAS,CAACL,UAAV,KAAyB,KAAKE,KAAL,CAAWF,UAHzC,EAGqD;AACxD,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAsBDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAACd,MAAAA,UAAD;AAAaG,MAAAA,cAAb;AAA6BD,MAAAA,WAA7B;AAA0CM,MAAAA;AAA1C,QAAwD,KAAKE,KAAnE;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WACI,KAAKiB,KAAL,CAAWV,UAAX,iBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR;AAQH;;AAxD6B;;AA2DlC,eAAeZ,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\nconst getVideoInfo = videoId => `https://www.googleapis.com/youtube/v3/videos?part=snippet&key=${apiKey}\\\n                              &id=${videoId}`\nconst getChannelInfo = channelId => `https://www.googleapis.com/youtube/v3/channels?part=snippet&key=${apiKey}\\\n                              &id=${channelId}`\n\nclass VideoInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoTitle : '',\n            description: '',\n            videoThumbnail: '',\n            channelImg : ''\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.videoId !== this.props.videoId) {\n            console.log(`videoInfo update ${nextProps.videoId} ${this.props.videoId}`)\n            this.updateVideoInfo(nextProps.videoId);\n            return true;\n        } else if (nextState.videoTitle !== this.state.videoTitle ||\n                    nextState.videoThumbnail !== this.state.videoThumbnail ||\n                    nextState.description !== this.state.default ||\n                    nextState.channelImg !== this.state.channelImg) {\n            return true\n        }\n        return false;\n    }\n\n    updateVideoInfo = async(videoId) => {\n        console.log('updatevideoindo')\n        if (!videoId) {\n            return;\n        }\n        const videoInfo = await axios.get(getVideoInfo(videoId));\n        console.log('videoIndo', videoInfo);\n        const videoInfoData = videoInfo.data.items[0].snippet;\n        const channelId = videoInfoData.channelId;\n        const videoTitle = videoInfoData.title;\n        const description = videoInfoData.description;\n        const videoThumbnail = videoInfoData.thumbnails.default.url;\n\n        const channelInfo = await axios.get(getChannelInfo(channelId));\n        console.log('channel info', channelInfo);\n        const channelImg = channelInfo.snippet.thumbnails.default.url;\n        \n        this.setState({videoTitle, videoThumbnail, description, channelImg});\n    }\n\n    render() {\n        const {videoTitle, videoThumbnail, description, channelImg} = this.state;\n        console.log('render')\n        return (\n            this.state.videoTitle && (\n                <div className=\"video-info\">\n                    <div>\n                        {videoTitle}\n                    </div>\n                </div>)\n        );\n    }\n}\n\nexport default VideoInfo;"]},"metadata":{},"sourceType":"module"}