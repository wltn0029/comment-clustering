{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jisu/comment-clustering/react/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport UrlForm from './components/UrlForm';\nimport VideoInfo from './components/VideoInfo';\nimport Comments from './components/Comments'; //youtube comment api\n\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\n\nconst getCommentThreads = videoId => `https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&key=${apiKey}\\\n                              &videoId=${videoId}&maxResults=100`;\n\nconst getVideoInfo = videoId => `https://www.googleapis.com/youtube/v3/videos?part=snippet&key=${apiKey}\\\n                              &videoId=${videoId}`;\n\nconst getChannelImgUrl = channelId => `https://www.googleapis.com/youtube/v3/channels?part=snippet&key=${apiKey}\\\n                              &id=${channelId}`; // ref : https://stackoverflow.com/questions/3452546/how-do-i-get-the-youtube-video-id-from-a-url\n\n\nconst getVideoId = videoUrl => {\n  let regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n  let match = videoUrl.match(regExp);\n\n  if (match && match[2].length == 11) {\n    return match[2];\n  } else {\n    return undefined;\n  }\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoId: ''\n    };\n\n    this.onChangeVideoUrl = videoUrl => {\n      console.log(' ideourl');\n\n      if (!videoUrl) {\n        return;\n      }\n\n      this.setState({\n        videoId: getVideoId(videoUrl)\n      });\n    };\n  }\n\n  render() {\n    console.log('rerender');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(UrlForm, {\n        handleClick: this.onChangeVideoUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VideoInfo, {\n        videoId: this.state.videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jisu/comment-clustering/react/src/App.js"],"names":["React","UrlForm","VideoInfo","Comments","apiKey","getCommentThreads","videoId","getVideoInfo","getChannelImgUrl","channelId","getVideoId","videoUrl","regExp","match","length","undefined","App","Component","state","onChangeVideoUrl","console","log","setState","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,yCAAf;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,IAAK,yEAAwEF,MAAO;AACrH,yCAAyCE,OAAQ,iBADjD;;AAEA,MAAMC,YAAY,GAAGD,OAAO,IAAK,iEAAgEF,MAAO;AACxG,yCAAyCE,OAAQ,EADjD;;AAEA,MAAME,gBAAgB,GAAGC,SAAS,IAAK,mEAAkEL,MAAO;AAChH,oCAAoCK,SAAU,EAD9C,C,CAGA;;;AACA,MAAMC,UAAU,GAAGC,QAAQ,IAAI;AAC7B,MAAIC,MAAM,GAAG,kEAAb;AACA,MAAIC,KAAK,GAAGF,QAAQ,CAACE,KAAT,CAAeD,MAAf,CAAZ;;AACA,MAAIC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,IAAmB,EAAhC,EAAoC;AAClC,WAAOD,KAAK,CAAC,CAAD,CAAZ;AACD,GAFD,MAEO;AACL,WAAOE,SAAP;AACD;AACF,CARD;;AASA,MAAMC,GAAN,SAAkBhB,KAAK,CAACiB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNZ,MAAAA,OAAO,EAAE;AADH,KADwB;;AAAA,SAKhCa,gBALgC,GAKZR,QAAD,IAAc;AAC/BS,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,UAAI,CAACV,QAAL,EAAe;AACb;AACD;;AACD,WAAKW,QAAL,CAAc;AAAChB,QAAAA,OAAO,EAAEI,UAAU,CAACC,QAAD;AAApB,OAAd;AACD,KAX+B;AAAA;;AAahCY,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKF;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWZ;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AArB+B;;AAwBlC,eAAeU,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport UrlForm from './components/UrlForm';\nimport VideoInfo from './components/VideoInfo';\nimport Comments from './components/Comments';\n\n//youtube comment api\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\nconst getCommentThreads = videoId => `https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&key=${apiKey}\\\n                              &videoId=${videoId}&maxResults=100`\nconst getVideoInfo = videoId => `https://www.googleapis.com/youtube/v3/videos?part=snippet&key=${apiKey}\\\n                              &videoId=${videoId}`\nconst getChannelImgUrl = channelId => `https://www.googleapis.com/youtube/v3/channels?part=snippet&key=${apiKey}\\\n                              &id=${channelId}`\n\n// ref : https://stackoverflow.com/questions/3452546/how-do-i-get-the-youtube-video-id-from-a-url\nconst getVideoId = videoUrl => {\n  let regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n  let match = videoUrl.match(regExp);\n  if (match && match[2].length == 11) {\n    return match[2];\n  } else {\n    return undefined;\n  }\n}\nclass App extends React.Component {\n  state = {\n    videoId: '',\n  }\n\n  onChangeVideoUrl = (videoUrl) => {\n    console.log(' ideourl')\n    if (!videoUrl) {\n      return;\n    }\n    this.setState({videoId: getVideoId(videoUrl)})\n  }\n\n  render() {\n    console.log('rerender')\n    return (\n      <div className=\"App\">\n          <UrlForm handleClick={this.onChangeVideoUrl}/>\n          <VideoInfo videoId={this.state.videoId}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}