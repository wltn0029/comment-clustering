{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jisu/comment-clustering/react/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\n\nconst getCommentThreads = videoId => `https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&key=${apiKey}\\\n                                        &videoId=${videoId}&maxResults=100`;\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.analyzeComments = async videoId => {\n      if (!videoId) {\n        return;\n      }\n\n      const commentThreads = await axios.get(getCommentThreads(videoId));\n      console.log(commentThreads);\n    };\n\n    this.state = {\n      neg: [],\n      pos: [],\n      neu: []\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('analyze');\n\n    if (nextProps.videoId !== this.props.videoId) {\n      this.analyzeComments(nextProps.videoId);\n      return true;\n    } else if (nextState.neg !== this.state.neg || nextState.pos !== this.state.pos || nextState.neu !== this.state.neu) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      pos,\n      neg,\n      neu\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/jisu/comment-clustering/react/src/components/Comments.js"],"names":["React","Component","axios","apiKey","getCommentThreads","videoId","Comments","constructor","props","analyzeComments","commentThreads","get","console","log","state","neg","pos","neu","shouldComponentUpdate","nextProps","nextState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,yCAAf;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,IAAK,yEAAwEF,MAAO;AACrH,mDAAmDE,OAAQ,iBAD3D;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC7BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,eAtBmB,GAsBD,MAAMJ,OAAN,IAAkB;AAChC,UAAI,CAACA,OAAL,EAAc;AACV;AACH;;AACD,YAAMK,cAAc,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUP,iBAAiB,CAACC,OAAD,CAA3B,CAA7B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACH,KA5BkB;;AAEf,SAAKI,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAG,EADG;AAETC,MAAAA,GAAG,EAAG,EAFG;AAGTC,MAAAA,GAAG,EAAG;AAHG,KAAb;AAKH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxCR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,QAAIM,SAAS,CAACd,OAAV,KAAsB,KAAKG,KAAL,CAAWH,OAArC,EAA8C;AAC1C,WAAKI,eAAL,CAAqBU,SAAS,CAACd,OAA/B;AACA,aAAO,IAAP;AACH,KAHD,MAGO,IAAIe,SAAS,CAACL,GAAV,KAAkB,KAAKD,KAAL,CAAWC,GAA7B,IACCK,SAAS,CAACJ,GAAV,KAAkB,KAAKF,KAAL,CAAWE,GAD9B,IAECI,SAAS,CAACH,GAAV,KAAkB,KAAKH,KAAL,CAAWG,GAFlC,EAEuC;AAC1C,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAUDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA,GAAD;AAAMD,MAAAA,GAAN;AAAWE,MAAAA;AAAX,QAAkB,KAAKH,KAA7B;AACA,wBACI;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AArC4B;;AAwCjC,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst apiKey = 'AIzaSyBhrKlcf07TRvzF5RPeKOxYSBC06TP-JUc';\nconst getCommentThreads = videoId => `https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&key=${apiKey}\\\n                                        &videoId=${videoId}&maxResults=100`\nclass Comments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            neg : [],\n            pos : [],\n            neu : []\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('analyze')\n        if (nextProps.videoId !== this.props.videoId) {\n            this.analyzeComments(nextProps.videoId);\n            return true;\n        } else if (nextState.neg !== this.state.neg ||\n                    nextState.pos !== this.state.pos ||\n                    nextState.neu !== this.state.neu) {\n            return true\n        }\n        return false;\n    }\n\n    analyzeComments = async(videoId) => {\n        if (!videoId) {\n            return;\n        }\n        const commentThreads = await axios.get(getCommentThreads(videoId));\n        console.log(commentThreads);\n    }\n\n    render() {\n        const {pos, neg, neu} = this.state;\n        return (\n            <div  className=\"comments\">\n            </div>\n        );\n    }\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}